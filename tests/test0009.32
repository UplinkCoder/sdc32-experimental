; ModuleID = 'test0009.d'

@.str = private constant [4 x i8] c"test"
@.cstr = private unnamed_addr constant [5 x i8] c"test\00"
@.str1 = private constant [10 x i8] c"test0009.d"
@.cstr2 = private unnamed_addr constant [11 x i8] c"test0009.d\00"

define weak_odr i32 @main() {
  br label %body

body:                                             ; preds = %0
  %1 = call i32 @_D8test00094mainFMZi()
  ret i32 %1
}

define weak_odr i32 @_D8test00094mainFMZi() {
  %str = alloca { i32, i8* }
  %p = alloca i8*
  br label %body

body:                                             ; preds = %0
  store { i32, i8* } { i32 4, i8* getelementptr inbounds ([5 x i8]* @.cstr, i32 0, i32 0) }, { i32, i8* }* %str
  %1 = getelementptr inbounds { i32, i8* }* %str, i32 0, i32 0
  %2 = load i32* %1
  %3 = icmp ne i32 %2, 4
  br i1 %3, label %then, label %else

then:                                             ; preds = %body
  ret i32 1

else:                                             ; preds = %body
  br label %merge

merge:                                            ; preds = %else
  %4 = load { i32, i8* }* %str
  %.length = extractvalue { i32, i8* } %4, 0
  %5 = icmp ult i32 2, %.length
  br i1 %5, label %bound_ok, label %bound_fail, !prof !0

bound_fail:                                       ; preds = %merge
  ;call void @_d_array_bounds({ i32, i8* } { i32 10, i8* getelementptr inbounds ([11 x i8]* @.cstr2, i32 0, i32 0) }, i32 14)
  unreachable

bound_ok:                                         ; preds = %merge
  %.ptr = extractvalue { i32, i8* } %4, 1
  %6 = getelementptr inbounds i8* %.ptr, i32 2
  %7 = load i8* %6
  %8 = zext i8 %7 to i32
  %9 = icmp ne i32 %8, 115
  br i1 %9, label %then1, label %else2

then1:                                            ; preds = %bound_ok
  ret i32 2

else2:                                            ; preds = %bound_ok
  br label %merge3

merge3:                                           ; preds = %else2
  %10 = getelementptr inbounds { i32, i8* }* %str, i32 0, i32 1
  %11 = load i8** %10
  store i8* %11, i8** %p
  %12 = load i8** %p
  %13 = call i32 @strlen(i8* %12)
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds { i32, i8* }* %str, i32 0, i32 0
  %16 = load i32* %15
  %17 = icmp ne i32 %13, %16
  br i1 %17, label %then4, label %else5

then4:                                            ; preds = %merge3
  ret i32 3

else5:                                            ; preds = %merge3
  br label %merge6

merge6:                                           ; preds = %else5
  ret i32 0
}

declare void @_d_array_bounds({ i32, i8* }, i32)

declare i32 @strlen(i8*)

!0 = metadata !{metadata !"branch_weights", i32 65536, i32 0}
